/* ======================================================= 
    Variables
========================================================== */

:root {
    --twitch-purple: #4b367c;
    --twitch-purple-med: #6441a4;
    --twitch-purple-light: #d3cae8;
    --gray-dark: #212121;
    --gray-med: #6e6779;
    /* --gray-light: #fafafa; */
}

/* ======================================================= 
    Typography
========================================================== */

h1 {
    text-align: center; /* Fallback style for browsers without flexbox */
    line-height: 1em;
    font-size: 2em;
    margin: 0;
    /* background: linear-gradient(to right, white, var(--twitch-purple)); */
    /* -webkit-background-clip: text; */
	/* -webkit-text-fill-color: transparent; */
}

a {
    /* color: var(--twitch-purple-light); */
    /* color: var(--twitch-purple); */
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
    color: var(--twitch-purple-med);
}

/* ======================================================= 
    Styles
========================================================== */

/* Import normalize */

* {
    box-sizing: border-box;
    /* Include padding and border in the element's total width and height */
}

body {
    font-family: sans-serif;
    /* background: var(--gray-dark); */
    /* background: linear-gradient(to right, #17141f, #37304a); */
    /* color: white; */
    color: black;
    margin: 0;
}

header {
    padding: 1em;
    background: var(--twitch-purple);
    /* background: linear-gradient(to right, var(--gray-dark), var(--twitch-purple)); */
    color: white;
    /* color: var(--twitch-purple); */
    /* color: var(--twitch-purple-light); */
}

.item {
    /* max-width: 100%; */
    color: var(--gray-med);
    font-size: 0.9em;
}

.item-img {
    /* width: 100px; */
    width: 20%;
    border-radius: 3px;
}

.item-right {
    /* width: calc(100% - 100px); */
    /* .grid width = 40em --> main --> section --> .item-avatar + .item-right
    .item-right width is 40em (640px) --> .item-right p
    Need to define width to prevent text running till end of browser. */ 
    width: 80%;

    overflow: hidden; 
    /* The overflow CSS property specifies what to do when an 
    element's content is too large to fit in its block formatting context.
    Need `overflow: hidden` bc image (100px) + .item-right p (640px) = 740px.
    740px will overflow 640px container. 
    .item-right p = width: 100%. That means 640px bc 
    main = width: 40em -> .container -> .item -> .item-right-p. */
    
    padding-left: 2em; /* gap */
}

/* Ellipsis
width + wrapping + overflow + text-overflow
Source: https://davidwalsh.name/css-ellipsis */

.item-right p {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.item-subtext {
    font-size: 0.7em;
}

footer {
    background: var(--gray-dark);
    text-align: center;
    padding: 1em 0;
    color: white;
}

/* ======================================================= 
    Layout
========================================================== */

/* Responsive, mobile layout (single column) | fallback */

/* How to center w/out flexbox
"margin: 0 auto" + "width"
*/

.grid {
    max-width: 40em;
    margin: 0 auto;
}

.main-grid {
    max-width: inherit; /* 40em. Coupled with .grid */
}

/* ------------------------------------------------------- */
/* Mobile layout for browsers with Flexbox support */

@supports (display: flex) {
    .item {
        display: flex;
        flex-direction: row; /* Items (icon and text) are side-by-side */
        justify-content: flex-start; /* Align items on main axis */
        align-items: center; /* Align items on cross-axis */
    }
}

/* Layouts for browsers with CSS Grid support */

@supports (grid-area: auto) {

    .grid {
        max-width: none;
    }
    
    .main-grid {
        max-width: 80vw;
        margin: 0 auto; /* center */
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        grid-gap: 10px;
    }

}

/* TODO
Add CSS gradient
Make text overflow fit in scrollbar
Dark mode, light mode
*/